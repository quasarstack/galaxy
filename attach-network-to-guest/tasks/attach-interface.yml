---

- ansible.builtin.debug:
    msg: 
      - "Attaching interfaces to guest:"
      - "{{guest}}"

- ansible.builtin.debug:
    msg: 
      - "Skipping operation for {{guest.name}}. guest.networks is not defined"
  when: guest.networks is not defined or guest.networks == ""

- block:
  - name: Get current interfaces list
    ansible.builtin.shell: virsh domiflist {{guest.name}}
    register: _iflist

  - ansible.builtin.debug:
      msg: 
        - "{{guest.name}} interfaces order:"
        - "{{_iflist.stdout_lines}}"
        - "Network order defined in vars:"
        - "{{guest.networks}}"

  - name: Run code to ensure VM has only one default network or matching given networks list
    ansible.builtin.shell: virsh domiflist {{guest.name}}|egrep "\s-\s+"|awk 'FNR != 1 {print $3}'
    register: _net_stat

  - ansible.builtin.debug:
      var: _net_stat.stdout_lines
  
  - name: Set fact attach_interfaces=skip when network order is matching
    ansible.builtin.set_fact:
      attach_interfaces: skip
    when: _net_stat.stdout_lines == guest.networks

  - name: Set fact attach_interfaces=true when machine does not have any other network than default
    ansible.builtin.set_fact:
      attach_interfaces: true
    when: _net_stat.stdout == ""

  - name: Set fact attach_interfaces=false when machine has unknown networks
    ansible.builtin.set_fact:
      attach_interfaces: false
    when: 
      - _net_stat.stdout != ""
      - _net_stat.stdout_lines != guest.networks

  - ansible.builtin.debug:
      var: attach_interfaces
    
  - name: SKIP interfaces attachment if network order id matching
    ansible.builtin.debug:
      msg: "Network Order is matching, skipping interface attachment for {{guest.name}}"
    when: attach_interfaces is match('skip')

  - name: CONTINUE interfaces attachment as machine has no other network than default
    ansible.builtin.debug:
      msg: "CONTINUE to attach network interfaces"
    when: attach_interfaces is match('true')
  
  - name: STOP interfaces attachment as machine has unknown networks
    ansible.builtin.debug:
      fail:
        - "STOP interfaces attachment"
        - "Either one of the network from {{guest.networks}} already attached to {{guest.name}}"
        - "Or Machine has some unknown network"
        - "Run -> virsh domiflist {{guest.name}} to validate"
        - "VM should have only one interface, attached to default network or network not from the given list"
        - "VM should not have any interface attached from given networks, this rule is enfourced to avoid any misconfiguration"
        - "Disable this role in playbook if you think machines already have networks attached in right order "
        - "You can manually delete additional network re-run the playbook"
        - "Review README for information to handle this scenario"
    when: attach_interfaces is match('false')

  - block:  
    - name: Shutdown {{guest.name}} guest machine
      ansible.builtin.shell: |
        while true;do
          if virsh domstate {{guest.name}}|egrep "running";then
            virsh shutdown {{guest.name}}
          fi

          if ! virsh domstate {{guest.name}}|egrep "shut off";then
            sleep 10
          else
            exit 0
          fi
        done

    - name: Attach interface to {{guest.name}}
      ansible.builtin.shell: |
        virsh attach-interface --domain {{guest.name}} --config \
          --type network \
          --source {{item}} \
          --model virtio
      with_items: "{{guest.networks}}"
    when: attach_interfaces is match('true')
  when: guest.networks is defined and guest.networks != ""
