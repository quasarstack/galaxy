---

- name: Set fact disable_biosdev
  set_fact:
      disable_biosdev: true
  when: (ansible_cmdline["net.ifnames"] is not defined or ansible_cmdline["net.ifnames"] != "0") or
        (ansible_cmdline["biosdevname"] is not defined or ansible_cmdline["biosdevname"] != "0")

- block:
  - name: Get current GRUB_CMDLINE_LINUX settings for RedHat machines
    shell: cat /etc/default/grub|egrep ^GRUB_CMDLINE_LINUX|cut -d'"' -f2
    register: _current_grub_cmd
    when: ansible_os_family == "RedHat"

  - name: Get current GRUB_CMDLINE_LINUX_DEFAULT settings for Debian machine
    shell: cat /etc/default/grub|egrep ^GRUB_CMDLINE_LINUX_DEFAULT|cut -d'"' -f2
    register: _current_grub_cmd
    when: ansible_os_family == "Debian"

  - debug:
      var: _current_grub_cmd.stdout

  - name: Set fact to switch to native interface names
    set_fact:
      _new_kernel_param: "{{_current_grub_cmd.stdout + ' net.ifnames=0 biosdevname=0'}}"
    when: _current_grub_cmd.stdout != ""

  - name: Set fact to switch to native interface names
    set_fact:
      _new_kernel_param: "net.ifnames=0 biosdevname=0"
    when: _current_grub_cmd.stdout == ""

  - debug:
      var: _new_kernel_param

  - name: Take backup of /etc/default/grub
    copy:
      src: /etc/default/grub
      dest: /etc/default/grub-{{ansible_date_time.iso8601_basic_short}}
      mode: 0644
      owner: root
      group: root
      remote_src: yes

  - name: Update /etc/default/grub with new kernel param for RedHat machines
    lineinfile:
      path: /etc/default/grub
      regexp: '^GRUB_CMDLINE_LINUX='
      line: 'GRUB_CMDLINE_LINUX="{{_new_kernel_param}}"'
    when: ansible_os_family == "RedHat"

  - name: Update /etc/default/grub with new kernel param for Debian machines
    lineinfile:
      path: /etc/default/grub
      regexp: '^GRUB_CMDLINE_LINUX_DEFAULT='
      line: 'GRUB_CMDLINE_LINUX_DEFAULT="{{_new_kernel_param}}"'
    when: ansible_os_family == "Debian"

  - name: Generate grub config for ubuntu machines
    command: grub-mkconfig -o /boot/grub/grub.cfg
    when: ansible_os_family == "Debian"

  - name: Generate grub config for RedHat based machines
    command: grub2-mkconfig -o /boot/grub2/grub.cfg
    when: ansible_os_family == "RedHat"

  - name: Update inferface name in /etc/netplan/00-installer-config.yaml
    replace:
      path: /etc/netplan/00-installer-config.yaml
      regexp: '^\s+{{ansible_default_ipv4.interface}}'
      replace: '    eth0' 
    when: ansible_os_family == "Debian"

  - name: Reboot host
    reboot:
      reboot_timeout: 600
      test_command: "uptime"
  when: disable_biosdev| default('false')|bool
