---

- name: Set fact disable_biosdev
  set_fact:
      disable_biosdev: true
  when: (ansible_cmdline["net.ifnames"] is not defined or ansible_cmdline["net.ifnames"] != "0") or
        (ansible_cmdline["biosdevname"] is not defined or ansible_cmdline["biosdevname"] != "0")

- block:
  - name: Get current GRUB_CMDLINE_LINUX settings
    shell: cat /etc/default/grub|egrep ^GRUB_CMDLINE_LINUX|cut -d'"' -f2
    register: _current_grub_cmd

  - debug:
      var: _current_grub_cmd.stdout

  - name: Set fact to switch to native interface names
    set_fact:
      _new_kernel_param: "{{_current_grub_cmd.stdout + ' net.ifnames=0 biosdevname=0'}}"

  - debug:
      var: _new_kernel_param

  - name: Take backup of /etc/default/grub
    copy:
      src: /etc/default/grub
      dest: /etc/default/grub-{{ansible_date_time.iso8601_basic_short}}
      mode: 0644
      owner: root
      group: root
      remote_src: yes

  - name: Update /etc/default/grub with new kernel param
    lineinfile:
      path: /etc/default/grub
      regexp: '^GRUB_CMDLINE_LINUX'
      line: 'GRUB_CMDLINE_LINUX="{{_new_kernel_param}}"'

  - name: Generate grub config
    command: grub2-mkconfig -o /boot/grub2/grub.cfg
    when: ansible_distribution == "Ubuntu"

  - name: Generate grub config
    command: grub2-mkconfig -o /boot/grub2/grub.cfg
    when: ansible_distribution_file_variety == "RedHat"


  - name: Reboot host
    reboot:
      reboot_timeout: 600
      test_command: "uptime"
  when: disable_biosdev| default('false')|bool
